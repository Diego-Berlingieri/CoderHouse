{"version":3,"sources":["components/Context/CartContext.js","assets/mello-logo.svg","components/NavBar/CartWidget.js","components/NavBar/NavBar.js","components/ItemList/Item.js","components/ItemList/ItemList.js","components/ItemList/ItemListContainer.js","components/ItemCount.js","components/ItemDetail/ItemDetail.js","components/ItemDetail/ItemDetailContainer.js","components/AboutUs.js","components/Cart/Cart.js","App.js","index.js"],"names":["CartContext","React","createContext","CartProvider","props","useState","cart","setCart","Provider","value","clearCart","console","log","removeItem","id","newCart","i","length","Item","push","addItem","qtyBuy","getCartTotals","totalQty","total","price","qty","children","CartWidget","useContext","to","className","NavBar","bg","expand","variant","fixed","Brand","href","src","logo","width","height","alt","Toggle","aria-controls","Collapse","title","Divider","Link","Component","item","Card","style","marginTop","Img","process","pictureUrl","Body","Title","Text","description","ItemList","Items","xs","md","lg","map","index","ItemListContainer","items","setItems","category","useParams","useEffect","Promise","resolve","reject","setTimeout","require","then","consulta","filter","curElement","resultado","Container","ItemCount","stock","initial","onAdd","setQty","btnPlus","setBtnPlus","btnMinus","setBtnMinus","btnAdd","setBtnAdd","handleQty","operation","Form","Row","Col","Button","onClick","e","disabled","Control","type","span","offset","ItemDetail","setStock","mySrc","Header","as","backgroundImage","Footer","preventDefault","alert","ItemDetailContainer","setItem","find","parseInt","AboutUs","Cart","class","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e00aae8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n\r\nexport const CartContext = React.createContext();\r\n\r\n\r\nexport default function CartProvider(props) {\r\n  const [cart, setCart] = useState([]);\r\n\r\n\r\n  function clearCart() {                    // Remover todos los items.\r\n    console.log('CartContext - clearing cart');\r\n    let newCart = [];\r\n    setCart(newCart);\r\n  };\r\n\r\n\r\n  function removeItem(id) {                // Remover un item del cart\r\n    console.log('CartContext - removeItem');\r\n    // Si uso el mismo array, no actualiza el componente. Por eso lo copio en un array nuevo.\r\n    // cart.splice(i,1);\r\n\r\n    let newCart = [];\r\n    for (let i = 0; i < cart.length; i++) {\r\n      if (cart[i].Item.id !== id) {          // usando el itemId.\r\n      //if (i !== index) {                      // usando su posicion en el carro.\r\n        newCart.push(cart[i])\r\n      }\r\n    }\r\n    setCart(newCart);\r\n  };\r\n\r\n\r\n  function addItem(Item, qtyBuy) {        // Agregar cierta cantidad de un item al carrito.\r\n    // Si el item esta en el carrito, sumo la cantidad.\r\n    for (let i = 0; i < cart.length; i++) {\r\n      if (cart[i].Item.id === Item.id) {\r\n        cart[i].qtyBuy = cart[i].qtyBuy + qtyBuy;     // no actualiza el cart\r\n        return;\r\n      }\r\n    }\r\n    setCart([ ...cart, {Item, qtyBuy} ]);\r\n  };\r\n\r\n  /*function isInCart(id) {\r\n    for (let i = 0; i < cart.length; i++) {\r\n      if (cart[i].Item.id === id) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }*/\r\n\r\n  function getCartTotals(){\r\n    let totalQty = 0;\r\n    let total = 0;\r\n    for (let i = 0; i < cart.length; i++) {\r\n      total = total + (cart[i].Item.price * cart[i].qtyBuy);\r\n      totalQty = totalQty + cart[i].qtyBuy;\r\n    }\r\n    return {total: total, qty: totalQty};\r\n  }\r\n\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cart, setCart, clearCart, removeItem, addItem, getCartTotals }}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\nexport { CartProvider };","export default __webpack_public_path__ + \"static/media/mello-logo.2fc0f693.svg\";","import {useContext} from 'react';\r\nimport {CartContext} from '../Context/CartContext';\r\nimport {Link} from 'react-router-dom';\r\nimport '../../styles/cartWidget.css';\r\n\r\n// Se puede agregar estado del cart. \"empty cart\", contador de items y/o un subtotal $\r\nfunction CartWidget() {\r\n  const { cart, getCartTotals } = useContext(CartContext);\r\n \r\n  return (\r\n    <>\r\n    <Link to={getCartTotals().qty > 0 ? \"/cart/\" : \"#\"}\r\n          className={getCartTotals().qty > 0 ?  'cartQty' : 'disabledCart'}>\r\n\r\n      {getCartTotals().qty} items\r\n      <i className=\"fas fa-shopping-cart\"></i>\r\n    </Link>\r\n    </>\r\n  );\r\n}\r\nexport default CartWidget;","import * as RBS from 'react-bootstrap';\r\nimport '../../styles/NavBar.css';\r\nimport logo from '../../assets/mello-logo.svg';\r\nimport CartWidget from './CartWidget';\r\nimport React, { Component } from 'react';\r\n\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    return (\r\n        <RBS.Navbar bg=\"dark\" expand=\"sm\" variant=\"dark\" fixed=\"top\">\r\n          <RBS.Navbar.Brand href=\"/\">\r\n            <img src={logo} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"React Bootstrap logo\"/>\r\n            MELLO\r\n          </RBS.Navbar.Brand>\r\n          \r\n          <RBS.Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <RBS.Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <RBS.Nav className=\"mr-auto\">\r\n              <RBS.NavDropdown title=\"Products\" id=\"basic-nav-dropdown\">\r\n                <RBS.NavDropdown.Item href=\"/itemList/Woman\">Woman</RBS.NavDropdown.Item>\r\n                <RBS.NavDropdown.Item href=\"/itemList/Man\">Man</RBS.NavDropdown.Item>\r\n                <RBS.NavDropdown.Item href=\"/itemList/Kids\">Kids</RBS.NavDropdown.Item>\r\n                <RBS.NavDropdown.Divider />\r\n                <RBS.NavDropdown.Item href=\"/itemList\">All</RBS.NavDropdown.Item>\r\n              </RBS.NavDropdown>\r\n              <RBS.Nav.Link href=\"/AboutUs\">About Us</RBS.Nav.Link>\r\n            </RBS.Nav>\r\n            <CartWidget />\r\n          </RBS.Navbar.Collapse>\r\n        </RBS.Navbar>\r\n    );\r\n  }\r\n}\r\nexport default NavBar;","import Card from 'react-bootstrap/Card'\r\n//import {useState} from 'react';\r\n//import ItemCount from '../ItemCount';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst Item = ({item}) => {\r\n\r\n  return(\r\n    <Card style={{ width: '18rem', marginTop:'20px' }}>\r\n      <Link to={\"/itemDetail/\" + item.id}>\r\n        <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + item.pictureUrl} />\r\n      </Link>  \r\n      <Card.Body>\r\n        <Card.Title>{item.title}</Card.Title>\r\n        <Card.Text>{item.description}</Card.Text>\r\n        <Card.Text>Price: ${item.price}</Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  );\r\n}\r\nexport default Item;","import * as RBS from 'react-bootstrap';\r\nimport Item from './Item';\r\n\r\n//<RBS.Col key={index} md={{ span: 4, offset: 1 }} lg={4}></RBS.Col>\r\n\r\nfunction ItemList ({Items}) {\r\n  return(\r\n    <RBS.Row xs={1} md={2} lg={3}>\r\n      {Items.map((item, index) => {\r\n        return(\r\n          <RBS.Col key={index}>\r\n            <Item item={item}/>\r\n          </RBS.Col>\r\n        )\r\n      })}\r\n    </RBS.Row>\r\n  );\r\n}\r\nexport default ItemList;","import Container from 'react-bootstrap/Container'\r\nimport {useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\n\r\nimport '../../styles/ItemListContainer.css';\r\nimport ItemList from './ItemList';\r\n\r\n\r\nfunction ItemListContainer () {\r\n  const[items, setItems] = useState([]);        // statefull\r\n  let{category} = useParams();\r\n\r\n  useEffect(() => {                             //    \r\n    new Promise((resolve, reject) => {          // async mock\r\n      setTimeout(() => {                        // setTimeout = retraso de 2 segundos para emular retrasos de red\r\n        resolve(                                // busca los datos de la base y los devuelve\r\n          require('../../assets/myDataBase.json') \r\n        )        \r\n      }, 2);\r\n      // then = se ejecuta si la consulta a la base de datos salio bien.\r\n      // en resultado estan los datos de la base y se pasan al statefull con setItems\r\n    }).then((consulta) => {                    // 'then' se ejecuta si la consulta a la base de datos salio bien\r\n      var found = consulta.filter(\r\n      function (curElement) {\r\n        if (category) {\r\n          return curElement.category === category;\r\n        } else {\r\n          return consulta;\r\n        }\r\n      }\r\n    );\r\n    return found                              // recorre el array y devuelve found donde category = props.category\r\n  })\r\n  .then(resultado => setItems(resultado))     // pasar found al statefull con setItem\r\n},[category]);\r\n  \r\n  return (\r\n    <Container>\r\n      <ItemList Items={items} />\r\n    </Container>\r\n  );\r\n}\r\nexport default ItemListContainer;\r\n","import {Form, Button, Col} from 'react-bootstrap';\r\nimport '../styles/ItemDetail.css';\r\nimport {useState, useEffect, React} from 'react';\r\n\r\n\r\nfunction ItemCount ({stock, initial, onAdd}) {\r\n  const[qty, setQty] = useState(initial);\r\n  \r\n  const[btnPlus, setBtnPlus] = useState(false);\r\n  const[btnMinus, setBtnMinus] = useState(true);\r\n  const[btnAdd, setBtnAdd] = useState(false);\r\n  \r\n  function handleQty(operation){\r\n    if (operation === 'plus' && qty < stock) {\r\n        setQty(qty + 1);\r\n    } else if(operation === 'minus' && qty > 1) {\r\n        setQty(qty - 1); \r\n    }\r\n  }\r\n\r\n  useEffect(() => {                 // run when stock or qty changes\r\n    if (qty === 0) {                // to avoid qty = 0 at start.\r\n      setQty(1);\r\n    } else if (qty > stock && stock > 0) {\r\n      setQty(stock);                // after a purchase, qty must be <= stock.\r\n    }\r\n\r\n    qty<=1 ? \r\n    setBtnMinus(true) : \r\n    setBtnMinus(false);             // block minus button\r\n\r\n    qty<=stock-1 ?\r\n    setBtnPlus(false) : \r\n    setBtnPlus(true);               // block plus button\r\n    \r\n    (stock >= qty && qty > 0) ? \r\n    setBtnAdd(false) : \r\n    setBtnAdd(true);                // block addToCart button\r\n  }, [qty, stock]);\r\n\r\n  \r\n  return(\r\n    <Form>\r\n      <Form.Row>\r\n        <Col xs=\"auto\">\r\n          <Button className=\"btn btn-default btn-number\" variant=\"outline-secondary\"\r\n            onClick={(e) => handleQty('minus')} disabled={btnMinus}>\r\n            <i className=\"fas fa-minus\"></i>\r\n          </Button>\r\n        </Col>\r\n\r\n        <Col xs={3}>\r\n          <Form.Control type=\"input\" value={qty} />\r\n        </Col>\r\n\r\n        <Col xs={2}>\r\n          <Button className=\"btn btn-default btn-number\" variant=\"outline-secondary\"\r\n            onClick={(e) => handleQty('plus')} disabled={btnPlus}>\r\n            <i className=\"fas fa-plus\"></i>\r\n          </Button>\r\n        </Col>\r\n\r\n        <Col xs={{ span: 4, offset: 0 }}>\r\n          <Button variant=\"dark\"\r\n           onClick={(e) => onAdd(e, qty)} disabled={btnAdd}>\r\n             Add to cart\r\n          </Button>\r\n        </Col>\r\n\r\n      </Form.Row>\r\n      Cur.Stock: {stock}\r\n    </Form>\r\n  );\r\n}\r\nexport default ItemCount;\r\n\r\n","import {useEffect, useState, useContext} from 'react';\r\nimport {CartContext} from '../Context/CartContext';\r\nimport ItemCount from '../ItemCount';\r\nimport Card from 'react-bootstrap/Card';\r\nimport '../../styles/ItemDetail.css';\r\n\r\n\r\nconst ItemDetail = ({Item}) => {\r\n  const [stock, setStock] = useState(0);\r\n  const {addItem} = useContext(CartContext);\r\n\r\n  var mySrc = 'url(' + process.env.PUBLIC_URL + Item.pictureUrl + ')';\r\n\r\n  useEffect(() => {\r\n      setStock(Item.stock);\r\n  },[Item.stock]);\r\n  \r\n  const restarStock = (e, qtyBuy) => {\r\n    e.preventDefault();\r\n\r\n    if (stock - qtyBuy >= 0) {\r\n      addItem(Item, qtyBuy);        // funcion del provider\r\n      setStock(stock - qtyBuy);     // descontar del stock\r\n    } else {\r\n      alert('Sorry...\\nNot enough stock');\r\n    }\r\n  };\r\n\r\n  return(\r\n    <>\r\n      <Card className='itemDetail'>\r\n        <Card.Header as=\"h5\">{Item.title}</Card.Header>\r\n        <div className='itemDetailPicContainer' style={{ backgroundImage: mySrc }} />        \r\n        <Card.Body>\r\n          <Card.Text>Product No: {Item.id}</Card.Text>\r\n          <Card.Text>Description: {Item.description}</Card.Text>\r\n          <Card.Text>Price: ${Item.price}</Card.Text>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <ItemCount stock={stock} initial={1} onAdd={restarStock}></ItemCount>\r\n        </Card.Footer>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default ItemDetail;","import {useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\n\r\nimport ItemDetail from './ItemDetail';\r\n\r\n\r\nfunction ItemDetailContainer () {\r\n    const[item, setItem] = useState([]);        // statefull\r\n    let{id} = useParams();\r\n    //console.log('ItemDetailContainer.js - param: ', id);\r\n  \r\n    useEffect(() => {                           // useEffect se ejecuta luego del primer render (simil componentDidMount)\r\n      new Promise((resolve, reject) => {        // async mock\r\n        setTimeout(() => {                      // setTimeout = retraso de 2 segundos para emular retrasos de red\r\n          resolve(\r\n            require('../../assets/myDataBase.json')    // busca los datos de la base y los devuelve\r\n          )\r\n        }, 2);\r\n      })\r\n      .then((consulta) => {                    // 'then' se ejecuta si la consulta a la base de datos salio bien\r\n        var found = consulta.find(\r\n          function (curElement) {\r\n            return curElement.id === parseInt(id);\r\n          }\r\n        );\r\n        return found                            // recorre el array y devuelve found donde id = props.id\r\n      })\r\n      .then(resultado => setItem(resultado))    // pasar found al statefull con setItem\r\n    },[id]);\r\n  \r\n    return (\r\n      <>{console.log(item)}\r\n        <ItemDetail Item={item}/>\r\n      </>\r\n    );\r\n  }\r\n  export default ItemDetailContainer;\r\n","import Container from 'react-bootstrap/Container'\r\nimport '../styles/aboutUs.css';\r\n\r\nfunction AboutUs () {\r\n  \r\n  return(\r\n    <Container>\r\n      <h2>This is the AboutUS Page</h2>\r\n    </Container>\r\n  );\r\n}\r\nexport default AboutUs;\r\n","import {useContext, useEffect} from 'react';\r\nimport {CartContext} from '../Context/CartContext';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {Button, Col, Card, Row, Container} from 'react-bootstrap';\r\nimport '../../styles/cart.css';\r\n\r\n\r\nfunction Cart () { \r\n  const {cart, clearCart, removeItem, getCartTotals} = useContext(CartContext);\r\n\r\n  useEffect(() => {                 // run when stock or qty changes\r\n  },[cart]);\r\n\r\n\r\n  return(\r\n    <Container>\r\n\r\n      {getCartTotals().qty == 0 \r\n      ? <>\r\n        <h3>Your cart is empty</h3>\r\n        </>\r\n        \r\n      : cart.map((item, index) => {\r\n        return(            \r\n          <Card style={{ marginTop:'5px' }}>\r\n          <Card.Header Header as=\"h5\">\r\n            <Row>\r\n              <Col>{item.Item.title}</Col>\r\n              <Col xs=\"auto\"><i class=\"fas fa-trash-alt\" onClick={(e) => removeItem(item.Item.id)}></i></Col>\r\n            </Row>\r\n          </Card.Header>\r\n\r\n          <Card.Body>\r\n          <Row>\r\n            <Col xs=\"auto\">\r\n              <div className='cartPicContainer'>\r\n                <Card.Img src={process.env.PUBLIC_URL + item.Item.pictureUrl} />\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <Card.Text>Cart Item: {index+1}</Card.Text>\r\n              <Card.Text>{item.Item.description}</Card.Text>\r\n              <Card.Text>Qty: {item.qtyBuy} x Item Price: ${item.Item.price} = $ {item.qtyBuy * item.Item.price}</Card.Text>        \r\n            </Col>\r\n          </Row>\r\n          </Card.Body>\r\n          </Card>\r\n        )\r\n      })\r\n      \r\n      }\r\n      \r\n        \r\n      <Card.Footer className=\"cartFooter\">\r\n      <Row>\r\n        <Col xs=\"auto\">\r\n          <h4>Total: $ {getCartTotals().total}</h4>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"success\" disabled={cart.length > 0 ? false : true }>\r\n            Go to Payment</Button>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"danger\" disabled={cart.length > 0 ? false : true }\r\n            onClick={(e) => clearCart()}>\r\n            Empty Cart</Button>\r\n        </Col>\r\n      </Row>\r\n      </Card.Footer>\r\n  \r\n        <Link to={\"/\"}>\r\n          <Button variant=\"primary\">Back to Store</Button>\r\n        </Link>\r\n          \r\n      </Container>\r\n  );\r\n}\r\nexport default Cart;\r\n","import {useContext} from 'react';\r\nimport React from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\n\r\n\r\nimport {CartContext, CartProvider} from './components/Context/CartContext';\r\n\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport ItemListContainer from './components/ItemList/ItemListContainer';\r\nimport ItemDetailContainer from './components/ItemDetail/ItemDetailContainer';\r\nimport AboutUs from './components/AboutUs';\r\nimport Cart from './components/Cart/Cart';\r\n\r\n\r\nfunction App () {\r\n  return (\r\n    <>\r\n    <CartProvider>\r\n      <BrowserRouter>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path='/' component={ItemListContainer} />\r\n          <Route path='/AboutUs' component={AboutUs} />\r\n          <Route path='/Cart' component={Cart} />\r\n          <Route path='/itemDetail/:id?' component={ItemDetailContainer} />\r\n          <Route path='/itemList/:category?' component={ItemListContainer} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </CartProvider>\r\n    </>\r\n  );\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n<App/>\n,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}